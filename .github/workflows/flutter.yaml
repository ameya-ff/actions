name: flutter
on:
  repository_dispatch:
    types: [trigger-flutter-workflow]
  workflow_dispatch:
    inputs:
      env:
        description: target env
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod
      git-ref:
        description: git ref
        required: true
        default: main
# If another release happens while this workflow is still running,
# cancel the earlier run in favor of the next run.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.client_payload.env || github.event.inputs.env }}
  cancel-in-progress: true
jobs:
  build:
    name: Build & Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - shell: bash
        env:
          BRANCH_OR_TAG: ${{ github.event.client_payload.git-ref || github.event.inputs.git-ref }}
          ENV: ${{ github.event.client_payload.env || github.event.inputs.env }}
          OWNER: ${{ secrets.OWNER }}
          REPO: ${{ secrets.REPO_F }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git clone -b $BRANCH_OR_TAG --single-branch "https://ameya-ff:$GH_TOKEN@github.com/$OWNER/$REPO.git" tmp
      # - shell: bash
      #   env:
      #     BRANCH_OR_TAG: ${{ github.event.client_payload.git-ref || github.event.inputs.git-ref }}
      #     ENV: ${{ github.event.client_payload.env || github.event.inputs.env }}
      #     NOTIFY_ENDPOINT: ${{ secrets.NOTIFY_ENDPOINT }}
      #   run: |
      #     if [[ "${ENV}" == "dev" ]]; then
      #       BUILD_NAME="v$(date +'%Y-%m-%d::%H:%M')-$ENV"
      #       echo "BUILD_NAME=$BUILD_NAME" >> $GITHUB_ENV
      #     else
      #       BUILD_NAME="$BRANCH_OR_TAG"
      #       echo "BUILD_NAME=$BUILD_NAME" >> $GITHUB_ENV
      #     fi
      #     cd tmp
      #     COMMIT_MESSAGE=$(git log --pretty=format:"%s" -n 1)
      #     if [[ -z "$COMMIT_MESSAGE" ]]; then
      #       echo "No commit message found"
      #     else
      #       echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
      #       curl --location "$NOTIFY_ENDPOINT" \
      #         --header 'Content-Type: application/json' \
      #         --data "{ \"message\": \"New commit: $COMMIT_MESSAGE\" }"
      #     fi
      - id: 'notify_google_chat'
        uses: 'google-github-actions/send-google-chat-webhook@v0.0.2'
        with:
          webhook_url: '${{ secrets.GOOGLE_CHAT_BUILDS_WEBHOOK }}'
          mention: "<users/all> running Flutter build"
      - run: rsync -a --remove-source-files tmp/ .
      - shell: bash
        env:
          BRANCH: ${{ secrets.OVERRIDE_BRANCH_NAME }}
          OWNER: ${{ secrets.OWNER }}
          PACKAGE: ${{ secrets.OVERRIDE_FLUTTER_PACKAGE_CH }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          cd packages
          git clone -b $BRANCH --single-branch "https://ameya-ff:$GH_TOKEN@github.com/$OWNER/flutter_$PACKAGE.git" $REPO
          cd shared_ui
          echo "dependency_overrides:"       > pubspec_overrides.yaml
          echo "  $PACKAGE:"                   >> pubspec_overrides.yaml
          echo "    path: ../$PACKAGE"         >> pubspec_overrides.yaml
          cd ..
          cd ..
          echo "dependency_overrides:"       > pubspec_overrides.yaml
          echo "  $PACKAGE:"                   >> pubspec_overrides.yaml
          echo "    path: packages/$PACKAGE"   >> pubspec_overrides.yaml
      # - name: Update version in YAML
      #   run: sed -i 's/path: ../path: packages/g' pubspec.yaml
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - uses: actions/cache@v3
        with:
          path: |
            **/flutter/.pub
            **/flutter/bin
            **/flutter/packages
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-  # Matches any previous cache key

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true
          architecture: x64
      - name: Clear pub cache
        run: flutter pub cache repair
      - run: flutter pub get
      - run: flutter --version
      - name: Setup Android Keystore from Secrets
        env:
          ANDROID_KEYPROPERTIES_BASE_64: ${{ secrets.ANDROID_KEYPROPERTIES_BASE_64 }}
          ANDROID_KEYSTORE_BASE_64: ${{ secrets.ANDROID_KEYSTORE_BASE_64 }}
        run: |
          ./scripts/android_setup.sh
      - name: Setup assets env
        env:
          ENV: ${{ github.event.client_payload.env || github.event.inputs.env }}
        run: |
          ./scripts/override_assets_env.sh
      - run: flutter build apk --split-per-abi --target-platform android-arm64 --build-name $BUILD_NAME
      # - name: Push to Releases
      #   uses: ncipollo/release-action@v1
      #   with:
      #     allowUpdates: true
      #     artifacts: "build/app/outputs/flutter-apk/app-arm64-v8a-release.apk"
      #     owner: ${{ secrets.OWNER }}
      #     repo: ${{ secrets.REPO_F }}
      #     # tag: v1.0.${{ github.run_number }}
      #     token: ${{ secrets.TOKEN }}
      #     # tag: v1.0.0
      #     tag: ${{ github.event.client_payload.env || github.event.inputs.env }}
      
      # - shell: bash
      #   env:
      #     NOTIFY_ENDPOINT: ${{ secrets.NOTIFY_ENDPOINT }}
      #   run: |
      #     curl --location "$NOTIFY_ENDPOINT" \
      #       --header 'Content-Type: application/json' \
      #       --data "{ \"message\": \"Release ($BUILD_NAME) is ready for download\" }"
      - uses: ryand56/r2-upload-action@latest # attempt 2
        with:
          r2-account-id: ${{ secrets.CF_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.CF_R2_ACCESS_KEY }}
          r2-secret-access-key: ${{ secrets.CF_R2_SECRET_KEY }}
          r2-bucket: ${{ secrets.CF_R2_BUCKET }}
          source-dir: build/app/outputs/flutter-apk
          destination-dir: ${{ github.workflow }}-${{ github.event.client_payload.env || github.event.inputs.env }} # Can be anything as long as it is an actual path
          output-file-url: false # defaults to true
          multipart-size: 100 # If the file size is greater than the value provided here, then use multipart upload
          max-retries: 5 # The maximum number of retries it takes to upload a multipart chunk until it moves on to the next part
          multipart-concurrent: true # Whether to concurrently upload a multipart chunk
          keep-file-fresh: true # defaults to false
      # - name: SonarQube Scan
      #   uses: SonarSource/sonarqube-scan-action@v5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
