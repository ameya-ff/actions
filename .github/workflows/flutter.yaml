name: Flutter
on:
  repository_dispatch:
    types: [trigger-flutter-workflow]
  workflow_dispatch:
    inputs:
      env:
        description: target env
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod
      git-ref:
        description: git ref
        required: true
        default: main
      platform:
        description: 'Build platform'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - android
        - web

# If another release happens while this workflow is still running,
# cancel the earlier run in favor of the next run.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.client_payload.env || github.event.inputs.env }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Flutter App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - shell: bash
        env:
          BRANCH_OR_TAG: ${{ github.event.client_payload.git-ref || github.event.inputs.git-ref }}
          ENV: ${{ github.event.client_payload.env || github.event.inputs.env }}
          OWNER: ${{ secrets.OWNER }}
          REPO: ${{ secrets.REPO_F }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git clone -b $BRANCH_OR_TAG --single-branch "https://ameya-ff:$GH_TOKEN@github.com/$OWNER/$REPO.git" tmp
      
      - id: set_build_name
        shell: bash
        env:
          BRANCH_OR_TAG: ${{ github.event.client_payload.git-ref || github.event.inputs.git-ref }}
          ENV: ${{ github.event.client_payload.env || github.event.inputs.env }}
        run: |
          if [[ "${ENV}" == "dev" ]]; then
            BUILD_NAME="v$(date +'%Y-%m-%d::%H:%M')-$ENV"
            echo "BUILD_NAME=$BUILD_NAME" >> $GITHUB_ENV
            echo "build_name=$BUILD_NAME" >> $GITHUB_OUTPUT
          else
            BUILD_NAME="$BRANCH_OR_TAG"
            echo "BUILD_NAME=$BUILD_NAME" >> $GITHUB_ENV
            echo "build_name=$BUILD_NAME" >> $GITHUB_OUTPUT
          fi
          cd tmp
          COMMIT_MESSAGE=$(git log --pretty=format:"%s" -n 1)
          if [[ -z "$COMMIT_MESSAGE" ]]; then
            echo "No commit message found"
          else
            echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
          fi
      
      - run: rsync -a --remove-source-files tmp/ .
      
      - shell: bash
        env:
          BRANCH: ${{ secrets.OVERRIDE_BRANCH_NAME }}
          OWNER: ${{ secrets.OWNER }}
          PACKAGE: ${{ secrets.OVERRIDE_FLUTTER_PACKAGE_CH }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          cd packages
          git clone -b $BRANCH --single-branch "https://ameya-ff:$GH_TOKEN@github.com/$OWNER/flutter_$PACKAGE.git" $PACKAGE
          cd shared_ui
          echo "dependency_overrides:"       > pubspec_overrides.yaml
          echo "  $PACKAGE:"                   >> pubspec_overrides.yaml
          echo "    path: ../$PACKAGE"         >> pubspec_overrides.yaml
          cd ..
          cd ..
          echo "dependency_overrides:"       > pubspec_overrides.yaml
          echo "  $PACKAGE:"                   >> pubspec_overrides.yaml
          echo "    path: packages/$PACKAGE"   >> pubspec_overrides.yaml
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: stable
          flutter-version-file: pubspec.yaml
      
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      
      - uses: actions/cache@v3
        with:
          path: |
            **/flutter/.pub
            **/flutter/bin
            **/flutter/packages
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
      
      - name: Cache Flutter pub dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-
      
      - name: Cache Dart tool
        uses: actions/cache@v3
        with:
          path: .dart_tool
          key: ${{ runner.os }}-dart-tool-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-dart-tool-
      
      - run: flutter pub get
      - run: flutter --version
      
      - name: Setup assets env
        env:
          ENV: ${{ github.event.client_payload.env || github.event.inputs.env }}
        run: |
          ./scripts/override_assets_env.sh

      # Android build steps
      - name: Setup Android Keystore from Secrets
        if: ${{ github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android' || github.event.client_payload.platform == 'all' || github.event.client_payload.platform == 'android' }}
        env:
          ANDROID_KEYPROPERTIES_BASE_64: ${{ secrets.ANDROID_KEYPROPERTIES_BASE_64 }}
          ANDROID_KEYSTORE_BASE_64: ${{ secrets.ANDROID_KEYSTORE_BASE_64 }}
        run: |
          ./scripts/android_setup.sh
      
      - name: Build APK
        if: ${{ github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android' || github.event.client_payload.platform == 'all' || github.event.client_payload.platform == 'android' }}
        run: |
          flutter build apk --split-per-abi --target-platform android-arm64 --build-name ${{ steps.set_build_name.outputs.build_name }}
      
      - name: Get signing report for release
        if: ${{ github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android' || github.event.client_payload.platform == 'all' || github.event.client_payload.platform == 'android' }}
        run: |
          cd android
          ./gradlew signingReport > ../build/app/outputs/flutter-apk/signing_report.txt
          cd ..
      
      - uses: ryand56/r2-upload-action@latest
        if: ${{ github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android' || github.event.client_payload.platform == 'all' || github.event.client_payload.platform == 'android' }}
        with:
          r2-account-id: ${{ secrets.CF_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.CF_R2_ACCESS_KEY }}
          r2-secret-access-key: ${{ secrets.CF_R2_SECRET_KEY }}
          r2-bucket: ${{ secrets.CF_R2_BUCKET }}
          source-dir: build/app/outputs/flutter-apk
          destination-dir: ${{ github.workflow }}-${{ github.event.client_payload.env || github.event.inputs.env }}
          output-file-url: false
          multipart-size: 100
          max-retries: 5
          multipart-concurrent: true
          keep-file-fresh: true

      # Web build steps
      - name: Build Web
        if: ${{ github.event.inputs.platform == 'all' || github.event.inputs.platform == 'web' || github.event.client_payload.platform == 'all' || github.event.client_payload.platform == 'web' }}
        run: flutter build web --release
      
      - name: Deploy to Netlify
        if: ${{ github.event.inputs.platform == 'all' || github.event.inputs.platform == 'web' || github.event.client_payload.platform == 'all' || github.event.client_payload.platform == 'web' }}
        uses: ameya-ff/actions-netlify@ameya
        with:
          publish-dir: './build/web'
          production-branch: main
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          enable-commit-status: true
          overwrites-pull-request-comment: false
          owner: ${{ secrets.OWNER }}
          repo: ${{ secrets.REPO_F }}
          sha: 7c79bd2
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ (github.event.client_payload.env || github.event.inputs.env) == 'prod' && secrets.NETLIFY_SITE_ID_PROD || secrets.NETLIFY_SITE_ID_DEV }}
        timeout-minutes: 1
